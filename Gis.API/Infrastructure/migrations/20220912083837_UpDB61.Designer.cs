// <auto-generated />
using System;
using Gis.API.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Gis.API.Infrastructure.migrations
{
    [DbContext(typeof(DomainDbContext))]
    [Migration("20220912083837_UpDB61")]
    partial class UpDB61
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Gis.API.Model.Por_BinhLuanGopYPhanAnh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IDGopYPhanAnh")
                        .HasColumnType("uuid");

                    b.Property<string>("NoiDung")
                        .HasMaxLength(4000)
                        .HasColumnType("character varying(4000)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_BinhLuanGopYPhanAnh");
                });

            modelBuilder.Entity("Gis.API.Model.Por_BinhLuanKhongThich", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IDBinhLuanGopYPhanAnh")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IDGopYPhanAnh")
                        .HasColumnType("uuid");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_BinhLuanKhongThich");
                });

            modelBuilder.Entity("Gis.API.Model.Por_BinhLuanThich", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IDBinhLuanGopYPhanAnh")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IDGopYPhanAnh")
                        .HasColumnType("uuid");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_BinhLuanThich");
                });

            modelBuilder.Entity("Gis.API.Model.Por_BuocQuyTrinh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IDChucNangBuocQuyTrinh")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IDQuyTrinh")
                        .HasColumnType("uuid");

                    b.Property<string>("IDsNguoiDungThamGia")
                        .HasColumnType("text");

                    b.Property<string>("Ten")
                        .HasMaxLength(155)
                        .HasColumnType("character varying(155)");

                    b.Property<int>("ThoiGianThucHien")
                        .HasColumnType("integer");

                    b.Property<int>("ThuTuBuoc")
                        .HasColumnType("integer");

                    b.Property<int>("ThuocThoiGianThucHien")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_BuocQuyTrinh");
                });

            modelBuilder.Entity("Gis.API.Model.Por_CauHoiThuongGap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CauHoi")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("CauTraLoi")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("STT")
                        .HasColumnType("integer");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("boolean");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_CauHoiThuongGap");
                });

            modelBuilder.Entity("Gis.API.Model.Por_ChucNang_BuocQuyTrinh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("CapNhatHoSo")
                        .HasColumnType("boolean");

                    b.Property<bool>("ChuyenBuocKeTiep")
                        .HasColumnType("boolean");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("HuyHoSo")
                        .HasColumnType("boolean");

                    b.Property<bool>("TamDungHoSo")
                        .HasColumnType("boolean");

                    b.Property<string>("Ten")
                        .HasMaxLength(155)
                        .HasColumnType("character varying(155)");

                    b.Property<bool>("TiepNhanHoSo")
                        .HasColumnType("boolean");

                    b.Property<bool>("TraKetQua")
                        .HasColumnType("boolean");

                    b.Property<bool>("TraNguocLai")
                        .HasColumnType("boolean");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("XemQuyTrinh")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Por_ChucNang_BuocQuyTrinh");
                });

            modelBuilder.Entity("Gis.API.Model.Por_FileBuocQuyTrinh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IDBuocQuyTrinh")
                        .HasColumnType("uuid");

                    b.Property<string>("Ten")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("URL")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_FileBuocQuyTrinh");
                });

            modelBuilder.Entity("Gis.API.Model.Por_FileGopYPhanAnh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IDGopYPhanAnh")
                        .HasColumnType("uuid");

                    b.Property<string>("Ten")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("URL")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_FileGopYPhanAnh");
                });

            modelBuilder.Entity("Gis.API.Model.Por_FileHoSoNguoiNop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IDFileMauThanhPhanHStrongQT")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IDHoSoNguoiNop")
                        .HasColumnType("uuid");

                    b.Property<string>("Ten")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("URL")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_FileHoSoNguoiNop");
                });

            modelBuilder.Entity("Gis.API.Model.Por_FileMauBienNhanHS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IDQuyTrinh")
                        .HasColumnType("uuid");

                    b.Property<string>("Ten")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("URL")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_FileMauBienNhanHS");
                });

            modelBuilder.Entity("Gis.API.Model.Por_FileMauThanhPhanHStrongQT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<Guid>("IDQuyTrinh")
                        .HasColumnType("uuid");

                    b.Property<string>("Ten")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("TenFile")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("URL")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_FileMauThanhPhanHStrongQT");
                });

            modelBuilder.Entity("Gis.API.Model.Por_GopYPhanAnh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("CongKhai")
                        .HasColumnType("boolean");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(155)
                        .HasColumnType("character varying(155)");

                    b.Property<string>("Email")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<Guid>("IDLinhVuc")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IDTrangThaiPA")
                        .HasColumnType("uuid");

                    b.Property<string>("MaPhanAnh")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NoiDung")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<Guid>("PhuongXa")
                        .HasColumnType("uuid");

                    b.Property<Guid>("QuanHuyen")
                        .HasColumnType("uuid");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("SoNha")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TaiKhoanNguoiGui")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("TenDuong")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("TenFile")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("TenNguoiGui")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("ThoiGianXuLy")
                        .HasColumnType("integer");

                    b.Property<string>("TieuDe")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<Guid>("TinhThanhPho")
                        .HasColumnType("uuid");

                    b.Property<string>("URL")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_GopYPhanAnh");
                });

            modelBuilder.Entity("Gis.API.Model.Por_HoSoNguoiNop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CMND")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<bool>("CongKhai")
                        .HasColumnType("boolean");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("HoTen")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<Guid>("IDHinhThucNhanKetQua")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IDHinhThucThanhToan")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IDMucDichSuDung")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IDTrangThaiHS")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PhuongXa")
                        .HasColumnType("uuid");

                    b.Property<Guid>("QuanHuyen")
                        .HasColumnType("uuid");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("SoHoSo")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("SoNha")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TenDuong")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<Guid>("TinhThanhPho")
                        .HasColumnType("uuid");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_HoSoNguoiNop");
                });

            modelBuilder.Entity("Gis.API.Model.Por_HoSo_Buoc_QuyTrinh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IDBuocQuyTrinh")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IDHoSo")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IDQuyTrinh")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IDTrangThai")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("NgayBatDau")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("NgayKetThuc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("NgayTraNguocLai")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NguoiTraNguocLai")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("NguoiXuLy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("NoiDungTraNguocLai")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("NoiDungXuLy")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_HoSo_Buoc_QuyTrinh");
                });

            modelBuilder.Entity("Gis.API.Model.Por_HoSo_QuyTrinh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IDBuocQuyTrinh")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IDHoSo")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IDQuyTrinh")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("NgayDuKienNhanKQ")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("NgayHuy")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("NgayNhanKQ")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("NgayNop")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("NgayTamNgung")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("NgayTiepNhan")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NguoiHuy")
                        .HasColumnType("text");

                    b.Property<string>("NguoiTiepNhan")
                        .HasColumnType("text");

                    b.Property<string>("NguoiTraKetQua")
                        .HasColumnType("text");

                    b.Property<string>("NguoiXuLy")
                        .HasColumnType("text");

                    b.Property<int>("ThoiGianThucHien")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_HoSo_QuyTrinh");
                });

            modelBuilder.Entity("Gis.API.Model.Por_HuongDanSuDung", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NoiDung")
                        .HasColumnType("text");

                    b.Property<string>("TieuDe")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("boolean");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_HuongDanSuDung");
                });

            modelBuilder.Entity("Gis.API.Model.Por_LinhVuc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IDCha")
                        .HasColumnType("uuid");

                    b.Property<string>("Ma")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("Ten")
                        .HasMaxLength(155)
                        .HasColumnType("character varying(155)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_LinhVuc");
                });

            modelBuilder.Entity("Gis.API.Model.Por_LoaiVanBanPhapQuy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Ten")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_LoaiVanBanPhapQuy");
                });

            modelBuilder.Entity("Gis.API.Model.Por_PhuongXaThiTran", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IDQuanHuyen")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IDTinhThanhPho")
                        .HasColumnType("uuid");

                    b.Property<string>("Ten")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_PhuongXaThiTran");
                });

            modelBuilder.Entity("Gis.API.Model.Por_QuanHuyen", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IDTinhThanhPho")
                        .HasColumnType("uuid");

                    b.Property<string>("Ten")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_QuanHuyen");
                });

            modelBuilder.Entity("Gis.API.Model.Por_QuyTrinh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GiaTien")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("GuiEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("GuiSms")
                        .HasColumnType("boolean");

                    b.Property<Guid>("IDCapDoThuTuc")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IDDichVuCungCap")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IDHinhThucCap")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IDLinhVuc")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IDMucDo")
                        .HasColumnType("uuid");

                    b.Property<string>("TenThuTuc")
                        .HasMaxLength(155)
                        .HasColumnType("character varying(155)");

                    b.Property<int>("ThoiGianThucHien")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_QuyTrinh");
                });

            modelBuilder.Entity("Gis.API.Model.Por_TaiKhoan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CMND")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("HoTen")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("MatKhau")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("TenDangNhap")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("boolean");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_TaiKhoan");
                });

            modelBuilder.Entity("Gis.API.Model.Por_TaiKhoanToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TenDangNhap")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("TokenLamMoi")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("TokenTruyCap")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_TaiKhoanToken");
                });

            modelBuilder.Entity("Gis.API.Model.Por_ThuatDat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<Guid>("IDHoSoNguoiNop")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PhuongXa")
                        .HasColumnType("uuid");

                    b.Property<Guid>("QuanHuyen")
                        .HasColumnType("uuid");

                    b.Property<string>("SoNha")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("SoThua")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("SoTo")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("TenDuong")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<Guid>("TinhThanhPho")
                        .HasColumnType("uuid");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_ThuatDat");
                });

            modelBuilder.Entity("Gis.API.Model.Por_TinhThanhPho", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Ten")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_TinhThanhPho");
                });

            modelBuilder.Entity("Gis.API.Model.Por_VanBanPhapQuy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IDLoaiVanBanPhapQuy")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("NgayBanHanh")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NoiDung")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("STT")
                        .HasColumnType("integer");

                    b.Property<string>("SoHieuVanBan")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TenFile")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("TieuDe")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("boolean");

                    b.Property<string>("URL")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Por_VanBanPhapQuy");
                });

            modelBuilder.Entity("Gis.API.Model.Sys_AuthToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccessToken")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RefeshToken")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserName")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.HasKey("Id");

                    b.ToTable("Sys_Authtokens");
                });

            modelBuilder.Entity("Gis.API.Model.Sys_Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Sys_Categories");
                });

            modelBuilder.Entity("Gis.API.Model.Sys_Config", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Value")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.HasKey("Id");

                    b.ToTable("Sys_Configs");
                });

            modelBuilder.Entity("Gis.API.Model.Sys_File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Extension")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ObjectId")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ObjectType")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Path")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Sys_Files");
                });

            modelBuilder.Entity("Gis.API.Model.Sys_Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DetailsURL")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("ObjectId")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ObjectType")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Receiver")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Sys_Notification");
                });

            modelBuilder.Entity("Gis.API.Model.Sys_Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Sys_Organizations");
                });

            modelBuilder.Entity("Gis.API.Model.Sys_Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsFunc")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Sys_Permissions");
                });

            modelBuilder.Entity("Gis.API.Model.Sys_Resource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Icon")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("Name")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Url")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.HasKey("Id");

                    b.ToTable("Sys_Resources");
                });

            modelBuilder.Entity("Gis.API.Model.Sys_Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Sys_Roles");
                });

            modelBuilder.Entity("Gis.API.Model.Sys_User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("FullName")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("boolean");

                    b.Property<string>("PassWord")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserName")
                        .HasMaxLength(55)
                        .HasColumnType("character varying(55)");

                    b.HasKey("Id");

                    b.ToTable("Sys_Users");
                });

            modelBuilder.Entity("Gis.API.Model.Sys_User_Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("OrganId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Sys_Users_Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
